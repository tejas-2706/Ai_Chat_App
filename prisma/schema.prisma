// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// one user has many conversations 
// one conversation can have many chats

model User {
  id Int @id @default(autoincrement())
  name String? 
  email String @unique
  password String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  conversations Conversation[]
}

model Conversation {
  id Int @id @default(autoincrement())
  title String?
  UserId Int 
  user User @relation(fields: [UserId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chats Chat[]
}

model Chat {
  id Int @id @default(autoincrement())
  role Role 
  content String
  metadata Json?
  ConversationId Int 
  conversation Conversation @relation(fields: [ConversationId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  User
  Assistant
}